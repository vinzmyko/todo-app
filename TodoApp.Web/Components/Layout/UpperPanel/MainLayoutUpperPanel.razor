@using TodoApp.Web.Components.Modals
@rendermode InteractiveServer
@inject UserService UserService
@implements IDisposable

<div class="flex items-center justify-between bg-white shadow-sm h-16">
    <div class="w-4/5 flex items-center justify-between pr-4">
        <div class="flex-grow flex justify-center">
            <h1 class="text-xl font-primary font-bold">
                @(UserService.IsLoggedIn 
                    ? $"{UserService.CurrentUser!.Username.ToUpper()}'S TODOS"
                    : "TODO APP")
            </h1>
        </div>
        @if (UserService.IsLoggedIn)
        {
            <button @onclick="OpenCreateTodoModal" class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-2 px-3 rounded-md transition-colors duration-200 text-sm">
                +
            </button>
        }
    </div>
    <div class="w-1/5 flex justify-center items-center">
        <button @onclick="ToggleUserModal" class="text-xl font-primary font-bold hover:text-blue-500 focus:outline-none">
            @(UserService.IsLoggedIn 
                ? $"profile".ToUpper()
                : "login".ToUpper())
        </button>
    </div>
</div>

<LoginModal @bind-IsVisible="isLoginModalVisible" OnLoginSuccess="HandleLoginSuccess" />
<UserProfileModal @bind-IsVisible="isProfileModalVisible" OnLogout="HandleLogout" />
<CreateTodoModal @bind-IsVisible="isCreateTodoModalVisible" OnTodoCreated="HandleTodoCreated" />

@code {
    private bool isLoginModalVisible;
    private bool isProfileModalVisible;
    private bool isCreateTodoModalVisible;

    protected override void OnInitialized()
    {
        UserService.OnUserStateChanged += StateHasChanged;
    }

    private void ToggleUserModal()
    {
        if (UserService.IsLoggedIn)
        {
            isProfileModalVisible = true;
        }
        else
        {
            isLoginModalVisible = true;
        }
    }

    private void OpenCreateTodoModal()
    {
        isCreateTodoModalVisible = true;
    }

    private void HandleLoginSuccess()
    {
        isLoginModalVisible = false;
        StateHasChanged();
    }

    private void HandleLogout()
    {
        isProfileModalVisible = false;
        StateHasChanged();
    }

    private void HandleTodoCreated()
    {
        // You might want to refresh the todo list or update some state here
        StateHasChanged();
    }

    public void Dispose()
    {
        UserService.OnUserStateChanged -= StateHasChanged;
    }
}